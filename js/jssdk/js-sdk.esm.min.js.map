{"version":3,"file":"js-sdk.esm.min.js","sources":["../src/shared/user-agent.ts","../src/shared/is-android.ts","../src/shared/global.ts","../src/shared/api-name.ts","../src/shared/is-web.ts","../src/bridges/invoke.ts","../src/bridges/eventbus.ts","../src/bridges/index.ts","../src/init.ts","../src/apis/utils.ts","../src/apis/native/call-native-api.ts","../src/apis/index.ts","../src/apis/miniprogram/gen-env.ts","../src/apis/miniprogram/navigate-to.ts","../src/apis/miniprogram/navigate-back.ts","../src/apis/miniprogram/switch-tab.ts","../src/apis/miniprogram/re-launch.ts","../src/apis/miniprogram/redirect-to.ts","../src/apis/miniprogram/post-message.ts","../src/apis/miniprogram/close.ts","../src/apis/native/choose-image.ts","../src/apis/native/get-location.ts","../src/apis/native/preview-image.ts","../src/apis/native/open-document.ts","../src/apis/native/get-storage.ts","../src/apis/native/set-storage.ts","../src/apis/native/remove-storage.ts","../src/apis/native/clear-storage.ts","../src/apis/native/get-network-type.ts","../src/apis/native/scan-code.ts","../src/apis/native/get-local-img-data.ts","../src/apis/native/native.ts","../src/index.ts"],"sourcesContent":["export const userAgent: string =\n  window?.navigator?.userAgent?.toLocaleLowerCase();\n","import { userAgent } from './user-agent';\n\nexport const isAndroid: boolean = userAgent?.indexOf('android') !== -1;\n","import { TabBar } from 'src/types';\n\n// 全局作用域扩展 Window 声明\ndeclare global {\n  interface Window {\n    [MA_GLOBAL_KEY]: typeof globalConfig;\n    simulatorWebkit: any;\n    __simulatorConfig__: any;\n  }\n}\n\nexport const CURRENT_ROUTE = Symbol(`currentRoute`);\nexport const IS_INITD = Symbol(`isInitd`);\nexport const TABBAR = Symbol(`tabBar`);\nexport const CAN_NAVIGATE_TO = Symbol(`canNavigateTo`);\n\n// 为了调试方便, 这里使用字符串常量 而不是 symbol 变量\n// TODO: 后期增加 __DEV__ 能力之后, 生产态使用 Symbol\nconst MA_GLOBAL_KEY = `__ma__global__`;\n\ntype GLOBAL_CONFIG_VAL = string | boolean | TabBar | null;\n\nconst globalConfig: Record<symbol, GLOBAL_CONFIG_VAL> = {\n  [CURRENT_ROUTE]: ``,\n  [IS_INITD]: false,\n  [TABBAR]: null,\n  [CAN_NAVIGATE_TO]: true\n};\n\n/**\n * 将变量和值挂到 window 上方便共享\n * 统一挂到 window.__ma__global__对象下, 相同的 key 会被覆盖\n */\nwindow[MA_GLOBAL_KEY] = globalConfig;\n\nexport function makeGlobal(key: symbol, val: GLOBAL_CONFIG_VAL): void {\n  globalConfig[key] = val;\n}\n\nexport function getGlobal(key: symbol): GLOBAL_CONFIG_VAL {\n  return window[MA_GLOBAL_KEY][key];\n}\n","const MiniProgram = {\n  NAVIGATE_TO: 'navigateTo',\n  NAVIGATE_BACK: 'navigateBack',\n  REDIRECT_TO: 'redirectTo',\n  SWITCH_TAB: 'switchTab',\n  RE_LAUNCH: 'reLaunch',\n  POST_MESSAGE: 'postMessage',\n  CLOSE: 'close'\n};\n\nconst Native = {\n  CHOOSE_IMAGE: 'chooseImage',\n  GET_LOCAL_IMG_DATA: 'getLocalImgData',\n  GET_LOCATION: 'getLocation',\n  PREVIEW_IMAGE: 'previewImage',\n  OPEN_DOCUMENT: 'openDocument',\n  GET_STORAGE: 'getStorage',\n  SET_STORAGE: 'setStorage',\n  REMOVE_STORAGE: 'removeStorage',\n  CLEAR_STORAGE: 'clearStorage',\n  GET_NETWORK_TYPE: 'getNetworkType',\n  SCAN_CODE: 'scanCode'\n};\n\nexport const APINames = {\n  MiniProgram,\n  Native\n};\n","export const isWeb: boolean = window.parent.__simulatorConfig__ !== undefined;\n","import { isAndroid, isWeb } from 'src/shared';\nimport {\n  GeneralCallbackResult,\n  GeneralCallback,\n  GeneralInvokeOption,\n  IAnyStrObject,\n  InvokeFinishedCallback\n} from 'src/types';\n\nexport type IAnyNumObject = Record<number, any>;\n\nexport interface InvokeOption extends GeneralInvokeOption {}\n\nexport interface InvokeInnerFnsOption {\n  beforeAll: GeneralCallback;\n  beforeSuccess: GeneralCallback;\n  afterSuccess: GeneralCallback;\n  beforeFail: GeneralCallback;\n  afterFail: GeneralCallback;\n  afterAll: GeneralCallback;\n}\n\n// invoke callbacks\nconst callbacks: IAnyNumObject = {};\nlet callbackIndex: number = 0;\n\nfunction invokeHandler(\n  command: string,\n  inputParams: string,\n  callbackId: number\n) {\n  if (isWeb) {\n    window.simulatorWebkit.messageHandlers.invoke.postMessage({\n      command,\n      inputParams,\n      callbackId,\n      type: 'legacy'\n    });\n  } else if (isAndroid) {\n    window.viewLayerNative.invoke(command, inputParams, callbackId);\n  } else {\n    window.webkit.messageHandlers.invoke.postMessage({\n      command,\n      inputParams,\n      callbackId\n    });\n  }\n}\n\nexport function invoke(\n  command: string,\n  inputParams: IAnyStrObject = {},\n  callback: InvokeFinishedCallback\n) {\n  const paramsString = JSON.stringify(inputParams);\n  const callbackId = ++callbackIndex;\n  callbacks[callbackId] = callback;\n  invokeHandler(command, paramsString, callbackId);\n}\n\n/**\n * 统一封装调用逻辑, 通知 Native, 调用 API\n */\nexport function invokeMethod(\n  apiName: string,\n  opts?: Partial<InvokeOption & IAnyStrObject>,\n  innerCb: Partial<InvokeInnerFnsOption> = {}\n) {\n  const invokeCbFnsObj: Record<string, GeneralCallback> = {};\n\n  for (const name in opts) {\n    if (typeof opts[name] === 'function') {\n      invokeCbFnsObj[name] = opts[name];\n      delete opts[name];\n    }\n  }\n\n  invoke(apiName, opts, (invokeStatusCode, res) => {\n    const isOk = Number(invokeStatusCode) === 0;\n    const isFail = !isOk;\n\n    if (isOk) {\n      innerCb?.beforeAll?.(res);\n      innerCb?.beforeSuccess?.(res);\n      invokeCbFnsObj.success?.(res);\n      innerCb?.afterSuccess?.(res);\n    }\n\n    if (isFail) {\n      innerCb?.beforeFail?.(res);\n      invokeCbFnsObj.fail?.(res);\n      innerCb?.afterFail?.(res);\n    }\n\n    invokeCbFnsObj.complete?.(res);\n    innerCb?.afterAll?.(res);\n  });\n}\n\n/**\n * Native notify Web Page invoke result\n *\n * => viewLayer.onInvokeFinished\n */\nexport function onInvokeFinished(\n  callbackId: number,\n  invokeStatusCode: number,\n  outputParams: GeneralCallbackResult\n) {\n  const callback = callbacks[callbackId];\n  callback(invokeStatusCode, outputParams);\n  delete callbacks[callbackId];\n}\n\nconst MacleJSBridge = {\n  invoke,\n  invokeMethod\n};\n\nexport default MacleJSBridge;\n","import { isAndroid, isWeb } from 'src/shared';\nimport { IAnyStrObject, IFunStrObject } from 'src/types';\n\n// subscribe handlers\nconst handlers: IFunStrObject = {};\nconst eventPrefix = 'ma_custom_event_';\n\n/**\n * subscribe web event(user)\n */\nexport function webSubscribe(eventName: string, handler: Function) {\n  handlers[eventName] = handler;\n}\n\n/**\n * subscribe custom event\n */\nexport function subscribe(eventName: string, handler: Function) {\n  handlers[`${eventPrefix}${eventName}`] = handler;\n}\n\n/**\n * trigger event handler\n */\nexport function subscribeHandler(eventName: string, data: IAnyStrObject) {\n  const handler = handlers[eventName];\n  return handler(data);\n}\n\nexport function publish(eventName: string, params: IAnyStrObject = {}) {\n  const paramsString = JSON.stringify(params);\n  publishHandler(`${eventPrefix}${eventName}`, paramsString);\n}\n\nexport function webPublish(eventName: string, params: IAnyStrObject = {}) {\n  const paramsString = JSON.stringify(params);\n  publishHandler(eventName, paramsString);\n}\n\n/**\n * 通知 Native, 处理业务事件\n */\nfunction publishHandler(eventName: string, paramsString: string) {\n  if (isWeb) {\n    window.simulatorWebkit.messageHandlers.notifyNative.postMessage({\n      eventName,\n      paramsString,\n      type: 'legacy'\n    });\n  } else if (isAndroid) {\n    window.viewLayerNative.notifyNative(eventName, paramsString);\n  } else {\n    window.webkit.messageHandlers.notifyNative.postMessage({\n      eventName,\n      paramsString\n    });\n  }\n}\n","import { invoke, invokeMethod } from './invoke';\nimport { subscribe, webSubscribe, publish, webPublish } from './eventbus';\n\nconst MacleJSBridge = {\n  invoke,\n  invokeMethod,\n  subscribe,\n  webSubscribe,\n  publish,\n  webPublish\n};\n\nexport default MacleJSBridge;\n\nexport * from './invoke';\nexport * from './eventbus';\n","import {\n  CAN_NAVIGATE_TO,\n  CURRENT_ROUTE,\n  CUSTOM_EVENT,\n  getGlobal,\n  IS_INITD,\n  makeGlobal,\n  TABBAR\n} from 'src/shared';\nimport { subscribe, publish } from './bridges';\nimport { IAnyStrObject } from 'src/types';\n\nexport function init() {\n  // already initd\n  if (getGlobal(IS_INITD) as boolean) {\n    return;\n  }\n\n  makeGlobal(IS_INITD, true);\n\n  try {\n    subscribe(CUSTOM_EVENT.GET_CURRENT_ROUTE, (data: IAnyStrObject) => {\n      makeGlobal(CURRENT_ROUTE, data.route);\n      makeGlobal(TABBAR, data.tabBar);\n      makeGlobal(\n        CAN_NAVIGATE_TO,\n        data.canNavigateTo !== undefined ? data.canNavigateTo : true\n      );\n    });\n\n    publish(CUSTOM_EVENT.GET_CURRENT_ROUTE);\n  } catch (error) {}\n}\n","import { APINames, getGlobal, TABBAR } from 'src/shared';\nimport { IAnyStrObject, TabBar } from 'src/types';\nimport {\n  NavigateToOption,\n  RedirectToOption,\n  SwitchTabOption,\n  ReLaunchOption\n} from './miniprogram';\n\n/**\n * fix route\n * @param currentRoute 当前路由\n * @param toUrl 目标 url\n */\nexport function getRealRoute(\n  currentRoute: string,\n  toUrl: string,\n  isHtml: boolean = true\n): string {\n  let fixedUrl = toUrl;\n\n  if (isHtml) {\n    fixedUrl = addHTMLSuffix(fixedUrl);\n  }\n\n  if (fixedUrl.startsWith('/')) {\n    return fixedUrl.substr('/'.length);\n  }\n\n  if (fixedUrl.startsWith('./')) {\n    return getRealRoute(currentRoute, fixedUrl.substr('./'.length), false);\n  }\n\n  // 移除 url 前面的 ../ 并记录其位置\n  let index;\n  let urlArrLength;\n  const urlArr = fixedUrl.split('/');\n  for (\n    index = 0, urlArrLength = urlArr.length;\n    index < urlArrLength && urlArr[index] === '..';\n    index++\n  );\n  urlArr.splice(0, index);\n  const pathArr = currentRoute.length > 0 ? currentRoute.split('/') : [];\n  pathArr.splice(pathArr.length - index - 1, index + 1);\n  return pathArr.concat(urlArr).join('/');\n}\n\nexport function encodeUrlQuery(url: string): string {\n  const urlArr = url.split('?');\n  const [urlPath, queryUrl] = urlArr;\n  if (!queryUrl) {\n    return url;\n  }\n  const queryParams = queryUrl.split('&').reduce((res: IAnyStrObject, cur) => {\n    if (typeof cur === 'string' && cur.length > 0) {\n      const curArr = cur.split('=');\n      const key = curArr[0];\n      const value = curArr[1];\n      res[key] = value;\n    }\n    return res;\n  }, Object.create(null));\n  const urlQueryArr = [];\n  for (const i in queryParams) {\n    urlQueryArr.push(i + '=' + encodeURIComponent(queryParams[i]));\n  }\n  return urlQueryArr.length > 0 ? urlPath + '?' + urlQueryArr.join('&') : url;\n}\n\nexport function addHTMLSuffix(url: string): string {\n  const urlArr = url.split('?');\n  urlArr[0] += '.html';\n  return urlArr[1] === undefined ? urlArr[0] : `${urlArr[0]}?${urlArr[1]}`;\n}\n\nexport function checkUrl(\n  apiName: string,\n  options:\n    | NavigateToOption\n    | RedirectToOption\n    | SwitchTabOption\n    | ReLaunchOption\n): boolean {\n  const tabBar = getGlobal(TABBAR) as TabBar | null;\n  if (tabBar === null) {\n    return true;\n  }\n\n  if (options.url.startsWith('/')) {\n    options.url = options.url.slice('/'.length);\n  }\n\n  // 目标 url 是否在 tabbar 中\n  const inTabBar = ((url: string) =>\n    tabBar?.list.find(e => url.indexOf(e.pagePath) === 0))(options.url);\n\n  // navigateTo 和 redirectTo API 禁止跳转到 tabbar 页面\n  if (\n    apiName === APINames.MiniProgram.NAVIGATE_TO ||\n    apiName === APINames.MiniProgram.REDIRECT_TO\n  ) {\n    if (inTabBar) {\n      console.error(\n        apiName,\n        options,\n        `${apiName}: can not ${apiName} to a tabbar page`\n      );\n      return false;\n    }\n  }\n\n  // switchTab 禁止跳转到非 tabbar 页面\n  if (apiName === APINames.MiniProgram.SWITCH_TAB) {\n    if (!inTabBar) {\n      console.error(\n        apiName,\n        options,\n        `${apiName}: can not ${apiName} to a non-tabbar page`\n      );\n      return false;\n    }\n  }\n  return true;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { IAnyStrObject } from 'src/types';\n\nexport type NativeCallback = (res: any) => any;\n\n// h5调用native原生方法\nexport function callNativeAPI(\n  apiName: string,\n  inputParams: IAnyStrObject = {},\n  callback: NativeCallback\n) {\n  if (!callback || typeof callback !== 'function') {\n    console.error('callNativeAPI failed, callback should be function!');\n    return;\n  }\n  MacleJSBridge.invoke(apiName, inputParams, (invokeStatusCode, res) => {\n    const isOk = Number(invokeStatusCode) === 0;\n    if (!isOk) {\n      console.error(`callNativeAPI failed, ${res.errMsg}`);\n      return;\n    }\n    callback(res);\n  });\n}\n","import {\n  getEnv,\n  navigateBack,\n  navigateTo,\n  redirectTo,\n  switchTab,\n  reLaunch,\n  postMessage,\n  close\n} from './miniprogram';\n\nimport {\n  chooseImage,\n  getLocation,\n  previewImage,\n  openDocument,\n  getStorage,\n  setStorage,\n  removeStorage,\n  clearStorage,\n  getNetworkType,\n  scanCode,\n  getLocalImgData,\n  callNativeAPI,\n  native\n} from './native';\n\nconst APIS = {\n  // miniapp\n  miniProgram: {\n    getEnv,\n    navigateTo,\n    navigateBack,\n    switchTab,\n    reLaunch,\n    redirectTo,\n    postMessage,\n    close,\n    navigateToMiniProgram() {},\n    navigateBackMiniProgram() {},\n    onWebviewEvent() {},\n    offWebviewEvent() {},\n    sendWebviewEvent() {},\n    onShow() {},\n    onHide() {},\n    onUnload() {}\n  },\n\n  // H5 invoke Native\n  chooseImage,\n  getLocation,\n  previewImage,\n  openDocument,\n  getStorage,\n  setStorage,\n  removeStorage,\n  clearStorage,\n  getNetworkType,\n  scanCode,\n  getLocalImgData,\n  callNativeAPI,\n  native\n};\n\nexport default APIS;\n","type GetEnvCallback = (ret: { miniprogram: boolean }) => void;\n\nexport function getEnv(callback: GetEnvCallback): void {\n  const miniprogram = window.__ma_environment === 'miniprogram';\n  callback({\n    miniprogram\n  });\n}\n","import { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { getRealRoute, encodeUrlQuery, checkUrl } from '../utils';\nimport MacleJSBridge from 'src/bridges';\n\nexport interface NavigateToOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.navigateTo({\n *     url: 'example?id=1',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function navigateTo(option: NavigateToOption): void {\n  if (!option.url) {\n    console.error(\n      'navigateTo fail,parameter error:parameter.url should be String instead of Undefined.'\n    );\n    return;\n  }\n  const fixedOption = option;\n  fixedOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    fixedOption.url\n  );\n  fixedOption.url = encodeUrlQuery(fixedOption.url);\n\n  if (checkUrl(APINames.MiniProgram.NAVIGATE_TO, fixedOption)) {\n    MacleJSBridge.invokeMethod(APINames.MiniProgram.NAVIGATE_TO, fixedOption);\n  }\n}\n","import { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport MacleJSBridge from 'src/bridges';\n\nexport interface NavigateBackOption extends Partial<GeneralInvokeOption> {\n  delta: number;\n}\n\n/**\n * ```js\n *   ma.miniProgram.navigateTo({\n *     delta: 1,\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function navigateBack(option: NavigateBackOption): void {\n  const fixedOption = Object.assign({ delta: 1 }, option);\n  MacleJSBridge.invokeMethod(APINames.MiniProgram.NAVIGATE_BACK, fixedOption);\n}\n","import { GeneralInvokeOption } from 'src/types';\nimport { getRealRoute, encodeUrlQuery, checkUrl } from '../utils';\nimport MacleJSBridge from 'src/bridges';\nimport { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\n\nexport interface SwitchTabOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.switchTab({\n *     url: '/example',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function switchTab(option: SwitchTabOption): void {\n  if (!option.url) {\n    console.error(\n      'switchTab fail,parameter error:parameter.url should be String instead of Undefined.'\n    );\n    return;\n  }\n  const fixedOption = option;\n  fixedOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    fixedOption.url\n  );\n  fixedOption.url = encodeUrlQuery(fixedOption.url);\n\n  if (checkUrl(APINames.MiniProgram.SWITCH_TAB, fixedOption)) {\n    MacleJSBridge.invokeMethod(APINames.MiniProgram.SWITCH_TAB, fixedOption);\n  }\n}\n","import { GeneralInvokeOption } from 'src/types';\nimport { getRealRoute, encodeUrlQuery, checkUrl } from '../utils';\nimport MacleJSBridge from 'src/bridges';\nimport { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\n\nexport interface ReLaunchOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.reLaunch({\n *     url: '/example',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function reLaunch(option: ReLaunchOption): void {\n  if (!option.url) {\n    console.error(\n      'reLaunch fail,parameter error:parameter.url should be String instead of Undefined.'\n    );\n    return;\n  }\n  const fixedOption = option;\n  fixedOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    fixedOption.url\n  );\n  fixedOption.url = encodeUrlQuery(fixedOption.url);\n\n  if (checkUrl(APINames.MiniProgram.RE_LAUNCH, fixedOption)) {\n    MacleJSBridge.invokeMethod(APINames.MiniProgram.RE_LAUNCH, fixedOption);\n  }\n}\n","import { GeneralInvokeOption } from 'src/types';\nimport { getRealRoute, encodeUrlQuery, checkUrl } from '../utils';\nimport MacleJSBridge from 'src/bridges';\nimport { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\n\nexport interface RedirectToOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.redirectTo({\n *     url: 'example?id=1',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function redirectTo(option: RedirectToOption): void {\n  if (!option.url) {\n    console.error(\n      'redirectTo fail,parameter error:parameter.url should be String instead of Undefined.'\n    );\n    return;\n  }\n  const fixedOption = option;\n  fixedOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    fixedOption.url\n  );\n  fixedOption.url = encodeUrlQuery(fixedOption.url);\n\n  if (checkUrl(APINames.MiniProgram.REDIRECT_TO, fixedOption)) {\n    MacleJSBridge.invokeMethod(APINames.MiniProgram.REDIRECT_TO, fixedOption);\n  }\n}\n","import { APINames } from 'src/shared';\nimport { GeneralInvokeOption, IAnyStrObject } from 'src/types';\nimport MacleJSBridge from 'src/bridges';\n\nexport interface PostMessageOption extends Partial<GeneralInvokeOption> {\n  data: string | IAnyStrObject;\n}\n\n/**\n * 向小程序发送消息，会在特定时机（小程序后退、组件销毁）触发组件的 message 事件\n * 需要通过 bindmessage 接收\n *\n * ```js\n *   ma.miniProgram.postMessage({\n *     data: 'foo' | { foo: 'bar' },\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function postMessage(option: PostMessageOption) {\n  MacleJSBridge.invokeMethod(APINames.MiniProgram.POST_MESSAGE, option);\n}\n","import { APINames } from 'src/shared';\nimport MacleJSBridge from 'src/bridges';\n\n/**\n * 关闭小程序\n *\n * ```js\n *   ma.miniProgram.close()\n * ```\n */\nexport function close() {\n  MacleJSBridge.invokeMethod(APINames.MiniProgram.CLOSE);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface ChooseImageOption extends Partial<GeneralInvokeOption> {\n  count: number;\n  sizeType: Array<String>;\n  sourceType: Array<String>;\n}\n\n// 拍照或上传\nexport function chooseImage(option?: ChooseImageOption) {\n  const fixedOption = Object.assign(\n    {\n      count: 9,\n      sizeType: ['original', 'compressed'],\n      sourceType: ['album', 'camera']\n    },\n    option\n  );\n  MacleJSBridge.invokeMethod(APINames.Native.CHOOSE_IMAGE, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n/**\n * ```js\n *   ma.getLocation({\n *     success(res) {},\n *     fail(res) {},\n *     complete(res) {},\n *   })\n * ```\n */\n\n// 获取当前地理位置信息\nexport function getLocation(option?: GeneralInvokeOption) {\n  MacleJSBridge.invokeMethod(APINames.Native.GET_LOCATION, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface PreviewImageOption extends Partial<GeneralInvokeOption> {\n  urls: Array<string>;\n  current: string;\n}\n\n/**\n * js\n * ma.previewImage({\n  urls: [],\n  current: '',\n  success() {},\n  fail() {},\n  complete() {}\n});\n*/\n\n// 预览图片\nexport function previewImage(option?: PreviewImageOption) {\n  if (!option?.urls) {\n    console.error(\n      'previewImage fail,parameter error:parameter.urls should be Array instead of Undefined.'\n    );\n    return;\n  }\n  MacleJSBridge.invokeMethod(APINames.Native.PREVIEW_IMAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface OpenDocumentOption extends Partial<GeneralInvokeOption> {\n  filePath: string;\n  fileType: string;\n}\n\n// 打开文件，预览文件\nexport function openDocument(option?: OpenDocumentOption) {\n  if (!option?.filePath) {\n    console.error(\n      'openDocument fail,parameter error:parameters.filePath should be String instead of Undefined.'\n    );\n    return;\n  }\n  const validFileType: Array<string> = [\n    'doc',\n    'docx',\n    'xls',\n    'xlsx',\n    'ppt',\n    'pptx',\n    'pdf'\n  ];\n  if (option.fileType && validFileType.indexOf(option.fileType) === -1) {\n    console.error(\n      'openDocument fail,parameter error:parameter.fileType is invalid value.'\n    );\n    return;\n  }\n  MacleJSBridge.invokeMethod(APINames.Native.OPEN_DOCUMENT, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface GetStorageOption extends Partial<GeneralInvokeOption> {\n  key: string;\n}\n\n// 从本地缓存中获取指定key的内容\nexport function getStorage(option?: GetStorageOption) {\n  if (!option?.key) {\n    console.error(\n      'getStorage fail,parameter error:parameters.key should be String instead of Undefined.'\n    );\n    return;\n  }\n  MacleJSBridge.invokeMethod(APINames.Native.GET_STORAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface SetStorageOption extends Partial<GeneralInvokeOption> {\n  key: string;\n  data: any;\n}\n\n// 将数据存储在本地缓存指定key中\nexport function setStorage(option?: SetStorageOption) {\n  if (!option?.key || !option.data) {\n    console.error(\n      'setStorage fail,parameter error:parameter.key or parameter.data should not be Undefined.'\n    );\n    return;\n  }\n  MacleJSBridge.invokeMethod(APINames.Native.SET_STORAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface RemoveStorageOption extends Partial<GeneralInvokeOption> {\n  key: string;\n}\n\n// 从本地缓存中移除指定key\nexport function removeStorage(option?: RemoveStorageOption) {\n  if (!option?.key) {\n    console.error(\n      'removeStorage fail,parameter error:parameter.key should be String instead of Undefined.'\n    );\n    return;\n  }\n  MacleJSBridge.invokeMethod(APINames.Native.REMOVE_STORAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 清理本地数据缓存\nexport function clearStorage(option?: GeneralInvokeOption) {\n  MacleJSBridge.invokeMethod(APINames.Native.CLEAR_STORAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 获取网络类型\nexport function getNetworkType(option?: GeneralInvokeOption) {\n  MacleJSBridge.invokeMethod(APINames.Native.GET_NETWORK_TYPE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface ScanCodeOption extends Partial<GeneralInvokeOption> {\n  onlyFromCamera: boolean;\n  scanType: Array<string>;\n}\n\n// 扫描二维码\nexport function scanCode(option?: ScanCodeOption) {\n  // 校验scanType合法性\n  const validScanType: Array<string> = [\n    'barCode',\n    'qrCode',\n    'datamatrix',\n    'pdf417'\n  ];\n  if (option?.scanType && option.scanType.length > 0) {\n    if (!option.scanType.every(item => validScanType.indexOf(item) > -1)) {\n      console.error(\n        'scanCode fail,parameter error:parameter.scanType contains invalid values.'\n      );\n      return;\n    }\n  }\n  const fixedOption = Object.assign(\n    {\n      onlyFromCamera: false,\n      scanType: ['barCode', 'qrCode']\n    },\n    option\n  );\n  MacleJSBridge.invokeMethod(APINames.Native.SCAN_CODE, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface GetLocalImgDataOption extends Partial<GeneralInvokeOption> {\n  path: string;\n}\n\n// 获取本地base64图片\nexport function getLocalImgData(option?: GetLocalImgDataOption) {\n  if (!option?.path) {\n    console.error(\n      'getLocalImgData fail,parameter error:parameter.path should be String instead of Undefined.'\n    );\n    return;\n  }\n  MacleJSBridge.invokeMethod(APINames.Native.GET_LOCAL_IMG_DATA, option);\n}\n","import { callNativeAPI } from './call-native-api';\nimport { IAnyStrObject } from 'src/types';\nexport function native(method: string, param?: IAnyStrObject) {\n  const finalParam = param || {};\n  return new Promise(resolve => {\n    callNativeAPI(method, finalParam, res => {\n      resolve(res);\n    });\n  });\n}\n","import { init } from './init';\nimport { onInvokeFinished } from './bridges';\nimport { subscribeHandler } from './bridges';\nimport APIS from './apis';\n\n// 执行初始化逻辑\ndocument.readyState !== 'loading'\n  ? init()\n  : document.addEventListener('DOMContentLoaded', init);\n\n/**\n * Support use ma.api from window\n */\nwindow.ma = APIS;\n\nwindow.viewLayer = {\n  onInvokeFinished,\n  subscribeHandler\n};\n\nexport default APIS;\n"],"names":["userAgent","_b","_a","window","navigator","toLocaleLowerCase","isAndroid","indexOf","CURRENT_ROUTE","Symbol","IS_INITD","TABBAR","CAN_NAVIGATE_TO","MA_GLOBAL_KEY","globalConfig","makeGlobal","key","val","getGlobal","APINames","MiniProgram","NAVIGATE_TO","NAVIGATE_BACK","REDIRECT_TO","SWITCH_TAB","RE_LAUNCH","POST_MESSAGE","CLOSE","Native","CHOOSE_IMAGE","GET_LOCAL_IMG_DATA","GET_LOCATION","PREVIEW_IMAGE","OPEN_DOCUMENT","GET_STORAGE","SET_STORAGE","REMOVE_STORAGE","CLEAR_STORAGE","GET_NETWORK_TYPE","SCAN_CODE","isWeb","undefined","parent","__simulatorConfig__","callbacks","callbackIndex","invoke","command","inputParams","callback","paramsString","JSON","stringify","callbackId","simulatorWebkit","messageHandlers","postMessage","type","viewLayerNative","webkit","invokeHandler","handlers","eventPrefix","subscribe","eventName","handler","publish","params","publishHandler","notifyNative","MacleJSBridge","invokeMethod","apiName","opts","innerCb","invokeCbFnsObj","name","invokeStatusCode","res","isOk","Number","isFail","beforeAll","call","beforeSuccess","_c","success","_d","afterSuccess","_e","beforeFail","_f","fail","_g","afterFail","_h","complete","_j","afterAll","webSubscribe","webPublish","init","data","route","tabBar","canNavigateTo","error","getRealRoute","currentRoute","toUrl","isHtml","index","urlArrLength","fixedUrl","url","urlArr","split","addHTMLSuffix","startsWith","substr","length","splice","pathArr","concat","join","encodeUrlQuery","urlPath","queryUrl","queryParams","reduce","cur","curArr","value","Object","create","urlQueryArr","i","push","encodeURIComponent","checkUrl","options","slice","inTabBar","list","find","e","pagePath","console","callNativeAPI","errMsg","APIS","miniProgram","getEnv","miniprogram","__ma_environment","navigateTo","option","fixedOption","navigateBack","assign","delta","switchTab","reLaunch","redirectTo","close","navigateToMiniProgram","navigateBackMiniProgram","onWebviewEvent","offWebviewEvent","sendWebviewEvent","onShow","onHide","onUnload","chooseImage","count","sizeType","sourceType","getLocation","previewImage","urls","openDocument","filePath","fileType","getStorage","setStorage","removeStorage","clearStorage","getNetworkType","scanCode","validScanType","scanType","every","item","onlyFromCamera","getLocalImgData","path","native","method","param","finalParam","Promise","resolve","document","readyState","addEventListener","ma","viewLayer","onInvokeFinished","outputParams","subscribeHandler"],"mappings":"QAAO,MAAMA,EACmB,QAA9BC,EAAiB,QAAjBC,EAAA,OAAAC,aAAA,IAAAA,YAAA,EAAAA,OAAQC,iBAAS,IAAAF,OAAA,EAAAA,EAAEF,iBAAW,IAAAC,OAAA,EAAAA,EAAAI,oBCCnBC,GAAwD,KAAnCN,aAAS,EAATA,EAAWO,QAAQ,YCSxCC,EAAgBC,OAAO,gBACvBC,EAAWD,OAAO,WAClBE,EAASF,OAAO,UAChBG,EAAkBH,OAAO,iBAIhCI,EAAgB,iBAIhBC,EAAkD,CACtDN,CAACA,GAAgB,GACjBE,CAACA,IAAW,EACZC,CAACA,GAAS,KACVC,CAACA,IAAkB,GASL,SAAAG,EAAWC,EAAaC,GACtCH,EAAaE,GAAOC,CACtB,CAEM,SAAUC,EAAUF,GACxB,OAAOb,OAAOU,GAAeG,EAC/B,CARAb,OAAOU,GAAiBC,ECjCxB,MAwBaK,EAAW,CACtBC,YAzBkB,CAClBC,YAAa,aACbC,cAAe,eACfC,YAAa,aACbC,WAAY,YACZC,UAAW,WACXC,aAAc,cACdC,MAAO,SAmBPC,OAhBa,CACbC,aAAc,cACdC,mBAAoB,kBACpBC,aAAc,cACdC,cAAe,eACfC,cAAe,eACfC,YAAa,aACbC,YAAa,aACbC,eAAgB,gBAChBC,cAAe,eACfC,iBAAkB,iBAClBC,UAAW,aCrBAC,OAAuDC,IAAtCtC,OAAOuC,OAAOC,oBCuBtCC,EAA2B,CAAA,EACjC,IAAIC,EAAwB,EAyBtB,SAAUC,EACdC,EACAC,EAA6B,CAAA,EAC7BC,GAEA,MAAMC,EAAeC,KAAKC,UAAUJ,GAC9BK,IAAeR,EACrBD,EAAUS,GAAcJ,EA9B1B,SACEF,EACAC,EACAK,GAEIb,EACFrC,OAAOmD,gBAAgBC,gBAAgBT,OAAOU,YAAY,CACxDT,UACAC,cACAK,aACAI,KAAM,WAECnD,EACTH,OAAOuD,gBAAgBZ,OAAOC,EAASC,EAAaK,GAEpDlD,OAAOwD,OAAOJ,gBAAgBT,OAAOU,YAAY,CAC/CT,UACAC,cACAK,cAGN,CAUEO,CAAcb,EAASG,EAAcG,EACvC,CCtDA,MAAMQ,EAA0B,CAAA,EAC1BC,EAAc,mBAYJ,SAAAC,EAAUC,EAAmBC,GAC3CJ,EAAS,GAAGC,IAAcE,KAAeC,CAC3C,UAUgBC,EAAQF,EAAmBG,EAAwB,IACjE,MAAMjB,EAAeC,KAAKC,UAAUe,GACpCC,EAAe,GAAGN,IAAcE,IAAad,EAC/C,CAUA,SAASkB,EAAeJ,EAAmBd,GACrCV,EACFrC,OAAOmD,gBAAgBC,gBAAgBc,aAAab,YAAY,CAC9DQ,YACAd,eACAO,KAAM,WAECnD,EACTH,OAAOuD,gBAAgBW,aAAaL,EAAWd,GAE/C/C,OAAOwD,OAAOJ,gBAAgBc,aAAab,YAAY,CACrDQ,YACAd,gBAGN,CCtDA,MAAMoB,EAAgB,CACpBxB,SACAyB,aF0DI,SACJC,EACAC,EACAC,EAAyC,CAAA,GAEzC,MAAMC,EAAkD,CAAA,EAExD,IAAK,MAAMC,KAAQH,EACS,mBAAfA,EAAKG,KACdD,EAAeC,GAAQH,EAAKG,UACrBH,EAAKG,IAIhB9B,EAAO0B,EAASC,GAAM,CAACI,EAAkBC,2BACvC,MAAMC,EAAoC,IAA7BC,OAAOH,GACdI,GAAUF,EAEZA,IACgB,QAAlB7E,EAAAwE,aAAA,EAAAA,EAASQ,iBAAS,IAAAhF,GAAAA,EAAAiF,KAAAT,EAAGI,GACC,QAAtB7E,EAAAyE,aAAA,EAAAA,EAASU,qBAAa,IAAAnF,GAAAA,EAAAkF,KAAAT,EAAGI,GACA,QAAzBO,EAAAV,EAAeW,eAAU,IAAAD,GAAAA,EAAAF,KAAAR,EAAAG,GACJ,QAArBS,EAAAb,aAAA,EAAAA,EAASc,oBAAY,IAAAD,GAAAA,EAAAJ,KAAAT,EAAGI,IAGtBG,IACiB,QAAnBQ,EAAAf,aAAA,EAAAA,EAASgB,kBAAU,IAAAD,GAAAA,EAAAN,KAAAT,EAAGI,GACA,QAAtBa,EAAAhB,EAAeiB,YAAO,IAAAD,GAAAA,EAAAR,KAAAR,EAAAG,GACJ,QAAlBe,EAAAnB,aAAA,EAAAA,EAASoB,iBAAS,IAAAD,GAAAA,EAAAV,KAAAT,EAAGI,IAGG,QAA1BiB,EAAApB,EAAeqB,gBAAW,IAAAD,GAAAA,EAAAZ,KAAAR,EAAAG,GACT,QAAjBmB,EAAAvB,aAAA,EAAAA,EAASwB,gBAAQ,IAAAD,GAAAA,EAAAd,KAAAT,EAAGI,EAAI,GAE5B,EE3FEf,YACAoC,aDGc,SAAanC,EAAmBC,GAC9CJ,EAASG,GAAaC,CACxB,ECJEC,UACAkC,oBDyByBpC,EAAmBG,EAAwB,IAEpEC,EAAeJ,EADMb,KAAKC,UAAUe,GAEtC,YEzBgBkC,IAEd,IAAInF,EAAUR,GAAd,CAIAK,EAAWL,GAAU,GAErB,IACEqD,EAA0C,mBAACuC,IACzCvF,EAAWP,EAAe8F,EAAKC,OAC/BxF,EAAWJ,EAAQ2F,EAAKE,QACxBzF,EACEH,OACuB6B,IAAvB6D,EAAKG,eAA8BH,EAAKG,cACzC,IAGHvC,oBACD,CAAC,MAAOwC,GAAS,CAfjB,CAgBH,CClBM,SAAUC,EACdC,EACAC,EACAC,GAAkB,GAElB,IAeIC,EACAC,EAhBAC,EAAWJ,EAMf,GAJIC,IACFG,EAgDE,SAAwBC,GAC5B,MAAMC,EAASD,EAAIE,MAAM,KAEzB,OADAD,EAAO,IAAM,aACQ1E,IAAd0E,EAAO,GAAmBA,EAAO,GAAK,GAAGA,EAAO,MAAMA,EAAO,IACtE,CApDeE,CAAcJ,IAGvBA,EAASK,WAAW,KACtB,OAAOL,EAASM,OAAO,GAGzB,GAAIN,EAASK,WAAW,MACtB,OAAOX,EAAaC,EAAcK,EAASM,OAAO,IAAc,GAMlE,MAAMJ,EAASF,EAASG,MAAM,KAC9B,IACEL,EAAQ,EAAGC,EAAeG,EAAOK,OACjCT,EAAQC,GAAkC,OAAlBG,EAAOJ,GAC/BA,KAEFI,EAAOM,OAAO,EAAGV,GACjB,MAAMW,EAAUd,EAAaY,OAAS,EAAIZ,EAAaQ,MAAM,KAAO,GAEpE,OADAM,EAAQD,OAAOC,EAAQF,OAAST,EAAQ,EAAGA,EAAQ,GAC5CW,EAAQC,OAAOR,GAAQS,KAAK,IACrC,CAEM,SAAUC,EAAeX,GAC7B,MAAMC,EAASD,EAAIE,MAAM,MAClBU,EAASC,GAAYZ,EAC5B,IAAKY,EACH,OAAOb,EAET,MAAMc,EAAcD,EAASX,MAAM,KAAKa,QAAO,CAACnD,EAAoBoD,KAClE,GAAmB,iBAARA,GAAoBA,EAAIV,OAAS,EAAG,CAC7C,MAAMW,EAASD,EAAId,MAAM,KACnBpG,EAAMmH,EAAO,GACbC,EAAQD,EAAO,GACrBrD,EAAI9D,GAAOoH,CACZ,CACD,OAAOtD,CAAG,GACTuD,OAAOC,OAAO,OACXC,EAAc,GACpB,IAAK,MAAMC,KAAKR,EACdO,EAAYE,KAAKD,EAAI,IAAME,mBAAmBV,EAAYQ,KAE5D,OAAOD,EAAYf,OAAS,EAAIM,EAAU,IAAMS,EAAYX,KAAK,KAAOV,CAC1E,CAQgB,SAAAyB,EACdnE,EACAoE,GAMA,MAAMpC,EAAStF,EAAUP,GACzB,GAAe,OAAX6F,EACF,OAAO,EAGLoC,EAAQ1B,IAAII,WAAW,OACzBsB,EAAQ1B,IAAM0B,EAAQ1B,IAAI2B,MAAM,IAIlC,MAAMC,GAAa5B,EACsC0B,EAAQ1B,IAA/DV,aAAA,EAAAA,EAAQuC,KAAKC,MAAKC,GAAiC,IAA5B/B,EAAI3G,QAAQ0I,EAAEC,aADtB,IAAEhC,EAInB,OACE1C,IAAYrD,EAASC,YAAYC,aACjCmD,IAAYrD,EAASC,YAAYG,cAE7BuH,IAWFtE,IAAYrD,EAASC,YAAYI,aAC9BsH,KACHK,QAAQzC,MACNlC,EACAoE,EACA,GAAGpE,cAAoBA,2BAElB,IAjBP2E,QAAQzC,MACNlC,EACAoE,EACA,GAAGpE,cAAoBA,uBAElB,EAgBb,CCtHM,SAAU4E,EACd5E,EACAxB,EAA6B,CAAA,EAC7BC,GAEKA,GAAgC,mBAAbA,EAIxBqB,EAAcxB,OAAO0B,EAASxB,GAAa,CAAC6B,EAAkBC,KAClB,IAA7BE,OAAOH,GAKpB5B,EAAS6B,GAHPqE,QAAQzC,MAAM,yBAAyB5B,EAAIuE,SAGhC,IATbF,QAAQzC,MAAM,qDAWlB,CCIA,MAAM4C,EAAO,CAEXC,YAAa,CACXC,OC5BE,SAAiBvG,GAErBA,EAAS,CACPwG,YAF8C,gBAA5BtJ,OAAOuJ,kBAI7B,EDwBIC,WEZE,SAAqBC,GACzB,IAAKA,EAAO1C,IAIV,YAHAiC,QAAQzC,MACN,wFAIJ,MAAMmD,EAAcD,EACpBC,EAAY3C,IAAMP,EAChBzF,EAAUV,GACVqJ,EAAY3C,KAEd2C,EAAY3C,IAAMW,EAAegC,EAAY3C,KAEzCyB,EAASxH,EAASC,YAAYC,YAAawI,IAC7CvF,EAAcC,aAAapD,EAASC,YAAYC,YAAawI,EAEjE,EFJIC,aGdE,SAAuBF,GAC3B,MAAMC,EAAcxB,OAAO0B,OAAO,CAAEC,MAAO,GAAKJ,GAChDtF,EAAcC,aAAapD,EAASC,YAAYE,cAAeuI,EACjE,EHYII,UIdE,SAAoBL,GACxB,IAAKA,EAAO1C,IAIV,YAHAiC,QAAQzC,MACN,uFAIJ,MAAMmD,EAAcD,EACpBC,EAAY3C,IAAMP,EAChBzF,EAAUV,GACVqJ,EAAY3C,KAEd2C,EAAY3C,IAAMW,EAAegC,EAAY3C,KAEzCyB,EAASxH,EAASC,YAAYI,WAAYqI,IAC5CvF,EAAcC,aAAapD,EAASC,YAAYI,WAAYqI,EAEhE,EJFIK,SKfE,SAAmBN,GACvB,IAAKA,EAAO1C,IAIV,YAHAiC,QAAQzC,MACN,sFAIJ,MAAMmD,EAAcD,EACpBC,EAAY3C,IAAMP,EAChBzF,EAAUV,GACVqJ,EAAY3C,KAEd2C,EAAY3C,IAAMW,EAAegC,EAAY3C,KAEzCyB,EAASxH,EAASC,YAAYK,UAAWoI,IAC3CvF,EAAcC,aAAapD,EAASC,YAAYK,UAAWoI,EAE/D,ELDIM,WMhBE,SAAqBP,GACzB,IAAKA,EAAO1C,IAIV,YAHAiC,QAAQzC,MACN,wFAIJ,MAAMmD,EAAcD,EACpBC,EAAY3C,IAAMP,EAChBzF,EAAUV,GACVqJ,EAAY3C,KAEd2C,EAAY3C,IAAMW,EAAegC,EAAY3C,KAEzCyB,EAASxH,EAASC,YAAYG,YAAasI,IAC7CvF,EAAcC,aAAapD,EAASC,YAAYG,YAAasI,EAEjE,ENAIrG,YOfE,SAAsBoG,GAC1BtF,EAAcC,aAAapD,EAASC,YAAYM,aAAckI,EAChE,EPcIQ,iBQ1BF9F,EAAcC,aAAapD,EAASC,YAAYO,MAClD,ER0BI,qBAAA0I,GAA0B,EAC1B,uBAAAC,GAA4B,EAC5B,cAAAC,GAAmB,EACnB,eAAAC,GAAoB,EACpB,gBAAAC,GAAqB,EACrB,MAAAC,GAAW,EACX,MAAAC,GAAW,EACX,QAAAC,GAAa,GAIfC,YStCI,SAAsBjB,GAC1B,MAAMC,EAAcxB,OAAO0B,OACzB,CACEe,MAAO,EACPC,SAAU,CAAC,WAAY,cACvBC,WAAY,CAAC,QAAS,WAExBpB,GAEFtF,EAAcC,aAAapD,EAASS,OAAOC,aAAcgI,EAC3D,ET6BEoB,YUnCI,SAAsBrB,GAC1BtF,EAAcC,aAAapD,EAASS,OAAOG,aAAc6H,EAC3D,EVkCEsB,aW9BI,SAAuBtB,IACtBA,eAAAA,EAAQuB,MAMb7G,EAAcC,aAAapD,EAASS,OAAOI,cAAe4H,GALxDT,QAAQzC,MACN,yFAKN,EXuBE0E,aY1CI,SAAuBxB,GAC3B,KAAKA,eAAAA,EAAQyB,UAIX,YAHAlC,QAAQzC,MACN,gGAaAkD,EAAO0B,WAAwD,IAT9B,CACnC,MACA,OACA,MACA,OACA,MACA,OACA,OAEmC/K,QAAQqJ,EAAO0B,UAClDnC,QAAQzC,MACN,0EAIJpC,EAAcC,aAAapD,EAASS,OAAOK,cAAe2H,EAC5D,EZoBE2B,Wa5CI,SAAqB3B,IACpBA,eAAAA,EAAQ5I,KAMbsD,EAAcC,aAAapD,EAASS,OAAOM,YAAa0H,GALtDT,QAAQzC,MACN,wFAKN,EbqCE8E,Wc5CI,SAAqB5B,IACpBA,aAAA,EAAAA,EAAQ5I,MAAQ4I,EAAOtD,KAM5BhC,EAAcC,aAAapD,EAASS,OAAOO,YAAayH,GALtDT,QAAQzC,MACN,2FAKN,EdqCE+E,ce9CI,SAAwB7B,IACvBA,eAAAA,EAAQ5I,KAMbsD,EAAcC,aAAapD,EAASS,OAAOQ,eAAgBwH,GALzDT,QAAQzC,MACN,0FAKN,EfuCEgF,agBnDI,SAAuB9B,GAC3BtF,EAAcC,aAAapD,EAASS,OAAOS,cAAeuH,EAC5D,EhBkDE+B,eiBpDI,SAAyB/B,GAC7BtF,EAAcC,aAAapD,EAASS,OAAOU,iBAAkBsH,EAC/D,EjBmDEgC,SkBhDI,SAAmBhC,GAEvB,MAAMiC,EAA+B,CACnC,UACA,SACA,aACA,UAEF,IAAIjC,aAAM,EAANA,EAAQkC,WAAYlC,EAAOkC,SAAStE,OAAS,IAC1CoC,EAAOkC,SAASC,OAAMC,GAAQH,EAActL,QAAQyL,IAAS,IAIhE,YAHA7C,QAAQzC,MACN,6EAKN,MAAMmD,EAAcxB,OAAO0B,OACzB,CACEkC,gBAAgB,EAChBH,SAAU,CAAC,UAAW,WAExBlC,GAEFtF,EAAcC,aAAapD,EAASS,OAAOW,UAAWsH,EACxD,ElByBEqC,gBmBlDI,SAA0BtC,IACzBA,eAAAA,EAAQuC,MAMb7H,EAAcC,aAAapD,EAASS,OAAOE,mBAAoB8H,GAL7DT,QAAQzC,MACN,6FAKN,EnB2CE0C,gBACAgD,OoB3Dc,SAAOC,EAAgBC,GACrC,MAAMC,EAAaD,GAAS,GAC5B,OAAO,IAAIE,SAAQC,IACjBrD,EAAciD,EAAQE,GAAYzH,IAChC2H,EAAQ3H,EAAI,GACZ,GAEN,GCHwB,YAAxB4H,SAASC,WACLtG,IACAqG,SAASE,iBAAiB,mBAAoBvG,GAKlDlG,OAAO0M,GAAKvD,EAEZnJ,OAAO2M,UAAY,CACjBC,0B3ByFA1J,EACAwB,EACAmI,IAGA/J,EADiBL,EAAUS,IAClBwB,EAAkBmI,UACpBpK,EAAUS,EACnB,E2B/FE4J,iB1BOc,SAAiBjJ,EAAmBsC,GAElD,OAAOrC,EADSJ,EAASG,IACVsC,EACjB"}